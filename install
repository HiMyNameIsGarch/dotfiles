#!/bin/sh

surround() {
    COLOR="$2"
    case $COLOR in 
        error | err) COLOR="\033[0;31m" ;;
        success | succ) COLOR="\033[0;32m" ;;
        warning | warn) COLOR="\033[0;33m" ;;
    esac
    # Prepare lengths for the surround characters
    TEXT_LENGTH="${#1}"
    WIDE_CHARS="$(( TEXT_LENGTH + 10 ))" # Tabs ( 2 * 4 ) + Margins ( 2 * 1 )
    # Build the front and bottom lines
    i=0
    BAR=""
    while [ "$i" -ne  "$WIDE_CHARS" ]; do
        i="$(( i + 1 ))"
        BAR="$BAR="
    done
    # Display the text surrounded
    printf "%s\n" "$BAR"
    printf "|$COLOR%s\033[0m|\n" "    $1    "
    printf "%s\n" "$BAR"
}

error() { surround "$1" "error" ; exit 1 ; }

surround "Install Garch's system configuration and programs." "warn"
surround "It's recommended to run this script on a base install of Arch based distro!" "warn"
surround "If you find any bugs please make an issue". "warn"
surround "TIP: To download programs faster, please enable parallel downloads" "warn"
printf '\n\n%s' "Continue installation? (y/n): "
read -r -N 1 RESPONSE
printf '\n'

case $RESPONSE in 
    y | Y)  continue ;;
    *) exit 1 ;;
esac

install_programs() {
    surround "Syncing the repos"
    sudo pacman --noconfirm -Sy || error "Cannot syncing the repos"
    surround "Installing necessary packages"
    sudo pacman --needed -S - < pkgs.txt || error "Cannot install packages"
    surround "Programs installed succesfully" "success"
}

#install_programs || error "Error installing programs!"


create_backup() {
    [ -d "$HOME/.$1" ] && sudo mkdir -p /etc/backup/$1 && 
        sudo mv "$HOME/.$1/" "/etc/backup/$1"
}

install_configs() {
    # TODO
    # Make zsh default shell
    # Source the profile file in xprofile script
    # The configs needs a reboot in order to work properly or just source the profile file
    surround "Beginning config installation"
    [ "$(basename "$PWD")" != "dotfiles" ] && error "Not in dotfiles directory, abording"
    
    # Create backup folder
    [ -d "/etc/backup" ] && sudo rm -r /etc/backup ; sudo mkdir -p /etc/backup

    # Backup current configs
    surround "Backup config folder" ; create_backup "config"
    surround "Backup vim folder" ; create_backup "vim"
    surround "Backup local folder" ; create_backup "local"

    # Create the same folder structrure
    surround "Recreating the folder structure"
    find . -type d | sed -r '/.*(\.git).*|^\.$/d; s/\.\///g' | 
        xargs -t -I {} mkdir -p ~/{} || error "Cannot create the same folder structure."

    # Symlink the current config files
    surround "Copy the configuration files"
    find . -type f | sed -r '/.*\.git.*|.*\.\/(README|LICENSE|install).*/d; s/\.\///g' | 
        xargs -t -I {} ln -s $PWD/{} ~/{} || error "Cannot copy the configuation files"

    # Display nice message
    surround "Success creating the configuration files." "success"
}

install_configs || error "Error installing configuration files."
