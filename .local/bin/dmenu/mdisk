#!/bin/sh

#
# mdisk (mount disk)
# A script that mounts/unmounts usb/disks
#

# run "lsblk > $HOME/.local/share/base-disks" with no usb inserted
baseFile="$HOME/.local/share/base-disks"
tempFile="/tmp/file"

operation=$(echo -e "Mount\nUnmount" | dmenu -i -p "Choose: ")
[[ -z "$operation" || ($operation != "Mount" && $operation != "Unmount") ]] && 
    exit 1 || $(lsblk > $tempFile)
disks=$(diff $baseFile $tempFile | grep part)

notify() { notify-send --urgency="$1" "Doom Guy says:" "$2" ; }
isEmpty() { [[ -z $1 ]] && notify critical "$2" && exit 1 ; }

mountDisk(){
    local filteredDisks="$(echo "$disks" | sed '/\//d')"
    isEmpty "$filteredDisks" "No disks available to mount!"
    selectedDisk=$(printf '%s\n' "$filteredDisks" | dmenu -i -l 10 -p "Select Disk: ")
    isEmpty "$selectedDisk" "No disk selected!"
    diskClean="${selectedDisk:4}"
    diskToMount="/dev/${diskClean%% *}"
    mountName=$(echo usb | dmenu -p "Mount name ~/:")
    isEmpty "$mountName" "Mount name was empty!"
    location="$HOME/$mountName"
    mkdir -p $location
    sudo -A mount $diskToMount $location && 
        notify normal "$diskToMount mounted succesfully at \n~/$mountName!" ||
        notify critical "$diskToMount failed to mount!"
}
unmountDisk(){
    local mountedDisks=$(echo "$disks" | grep "/")
    isEmpty "$mountedDisks" "No disks available to unmount"
    local selectedDisk=$(echo -e "$mountedDisks" | dmenu -i -l 10 -p "Select Disk: ")
    isEmpty "$selectedDisk" "No disk selected"
    local diskToUnmount="${selectedDisk##* }"
    local cleanDisk="~${diskToUnmount##$HOME}"
    sudo -A umount $diskToUnmount && rm -r $diskToUnmount &&
        notify normal "$cleanDisk unmounted succesfully!" ||
        notify critical "$cleanDisk cannot be unmounted!"
}

case $operation in 
    Mount) mountDisk ;;
    Unmount) unmountDisk ;;
esac

