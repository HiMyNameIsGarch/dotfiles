#!/bin/sh
#

# Check for memory usage with ps
# Source: Stack Overflow: 3853655
#
#
#

mathlab() {
    export _JAVA_AWT_WM_NONREPARENTING=1
    # export MATLAB_JAVA=/usr/lib/jvm/java-11-openjdk
    export MESA_LOADER_DRIVER_OVERRIDE=radeonsi
    matlab
}


runsql() {
    sudo sqlcmd -S localhost -U sa -P 'Muielarga69!' -d passman -i "${1}" -C
}

mem()
{
    ps -eo rss,pid,euser,args:100 --sort %mem | grep -v grep | grep -i $@ | awk '{printf $1/1024 "MB"; $1=""; print }'
}

# Function To Extract File Archives Of Various Types
extract() {
 if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
 else
    for n in "$@"
    do
      if [ -f "$n" ] ; then
          case "${n%,}" in
            *.cbt|*.tar.bz2|*.tar.gz|*.tar.xz|*.tbz2|*.tgz|*.txz|*.tar)
                         tar xvf "$n"       ;;
            *.lzma)      unlzma ./"$n"      ;;
            *.bz2)       bunzip2 ./"$n"     ;;
            *.cbr|*.rar)
                         unrar x -ad ./"$n" ;;
            *.gz)        gunzip ./"$n"      ;;
            *.cbz|*.epub|*.zip)
                         unzip ./"$n"       ;;
            *.z)         uncompress ./"$n"  ;;
            *.7z|*.arj|*.cab|*.cb7|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.pkg|*.rpm|*.udf|*.wim|*.xar)
                         7z x ./"$n"        ;;
            *.xz)        unxz ./"$n"        ;;
            *.exe)       cabextract ./"$n"  ;;
            *.cpio)      cpio -id < ./"$n"  ;;
            *.cba|*.ace)
                         unace x ./"$n"      ;;
            *)
                echo "extract: '$n' - unknown archive method"
                return 1 ;;
          esac
      else
          echo "'$n' - file does not exist"
          return 1
      fi
    done
fi
}

db() { # Directory Browser
    while [ : ]; do # use Ctrl-C to quit || select "." to go back one dir
        current_dir="$(find . -maxdepth 1 -type d | sed -r 's/\.\///g' | fzf)"
        [ -z "$current_dir" ] && break
        [ "$current_dir" = "." ] && current_dir=".."
        cd "$current_dir"
    done
    ls
}

isprime() {
    #storing the number to be checked
    number=$1
    i=2
    #flag variable
    f=0

    #running a loop from 2 to number/2
    while test $i -le $(expr $number / $i); do

        #checking if i is factor of number
        test $(expr $number % $i) -eq 0 && f=1

        #increment the loop variable
        i=$(expr $i + 1)

    done
    test $f -eq 1 &&
        echo -e "\e[31m$number is Not Prime" ||
        echo -e "\e[32m$number is Prime"
}

# Play youtube playlist with mpv
yplay() {
    [ -z "$1" ] && echo "Please provide a playlist in order to continue..." && return 1
    local ARGS=""
    case "$2" in
        audio | a) ARGS="--no-video" ;;
        video | v) ARGS="--fs" ;;
    esac
    mpv "https://youtube.com/playlist?list=$1" "$ARGS"
}

# BANGERS
bangers() {
    mpv "https://youtube.com/playlist?list=PLm323Lc7iSW9oSIDihesMJXmMNfh8U59k" --no-video --shuffle
}

# Mkdir and cd into one command
mkd() {
    mkdir -p "$1"
    cd "$1"
}

# find aliases more easy
aliases() {
    alias | grep "$1"
}

chist() {
    echo "$(cat "$HISTFILE" | fzf)" | tr "\n" " " | xclip -sel c
}
hist() {
    grep "$1" "$HISTFILE"
}

ehist() { # edit the history file
    $EDITOR "$HISTFILE"
}

isthere() {
    [ -z "$1" ] && echo No argument provided && return 1
    echo "###############################"
    echo "|     Results from Pacman     |"
    echo "###############################"
    echo
    pacman -Ss "$1"
    echo
    echo "###############################"
    echo "|      Results from AUR       |"
    echo "###############################"
    echo
    paru -Ss "$1"
}

clear() { # Don't type clear, use CTRL+l instead!
    shuf -n 1 "$HOME/Media/Data/insults"
}

pd() {
    local BASE="$HOME/Dev/Vue/priveste-dincolo"
    initnvm() {
        . /usr/share/nvm/init-nvm.sh
        nvm use 18
    }
    libreme() {
        nohup librewolf localhost:3000 >/dev/null &
    }
    cdm() { cd "$BASE" ; }
    case $1 in
        # Actions
        init) initnvm ;;
        start) cdm && initnvm && libreme && npm run dev ;;
        stat) cdm && ls && git status ;;
        edit) cdm && nvim -c "Telescope find_files" ;;
        # Directories
        *) cdm && ls ;;
    esac
}

uni() {
    cd "$HOME/Dev/Uni/"
    db
}

